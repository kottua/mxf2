import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import styles from "./EnginePriceCalculator.module.css";
import { actualPricePerSQM } from "../core/actualPricePerSQM.ts";
function EnginePriceCalculator({ realObject, selectedEngine, setCalculationProcessData }) {
    const [calculatedPrice, setCalculatedPrice] = useState(0);
    function onCalculatePrice(normContributeRT = 0) {
        actualPricePerSQM(realObject, selectedEngine, normContributeRT, setCalculationProcessData, setCalculatedPrice);
    }
    return (_jsxs("section", { className: styles.section, children: [_jsxs("h2", { className: styles.sectionTitle, children: ["\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0440\u043E\u0437\u0440\u0430\u0445\u043E\u0432\u0430\u043D\u043E\u0457 \u0446\u0456\u043D\u0438 \u043D\u0430 ", selectedEngine, " engine"] }), _jsxs("div", { className: styles.priceContainer, children: [_jsx("span", { className: styles.priceLabel, children: "\u0426\u0456\u043D\u0430 \u0437\u0430 \u043C\u00B2:" }), _jsxs("span", { className: styles.priceValue, children: [calculatedPrice, " \u20B4"] })] }), _jsxs("div", { className: styles.infoGrid, children: [_jsxs("div", { className: styles.infoItem, children: [_jsx("span", { className: styles.infoLabel, children: "\u0411\u0430\u0437\u043E\u0432\u0438\u0439 \u0434\u0432\u0438\u0433\u0443\u043D:" }), _jsx("span", { className: styles.infoValue, children: selectedEngine })] }), realObject && (_jsxs(_Fragment, { children: [_jsxs("div", { className: styles.infoItem, children: [_jsx("span", { className: styles.infoLabel, children: "\u0411\u0430\u0437\u043E\u0432\u0430 \u0446\u0456\u043D\u0430:" }), _jsxs("span", { className: styles.infoValue, children: [realObject.income_plans[0]?.price_per_sqm?.toFixed(2) || '0.00', " \u20B4"] })] }), _jsxs("div", { className: styles.infoItem, children: [_jsx("span", { className: styles.infoLabel, children: "\u041C\u0456\u043D. \u043B\u0456\u043A\u0432\u0456\u0434\u043D\u0456\u0441\u0442\u044C:" }), _jsx("span", { className: styles.infoValue, children: realObject.pricing_configs[0]?.content.staticConfig.minimum_liq_refusal_price?.toFixed(2) || '0.00' })] }), _jsxs("div", { className: styles.infoItem, children: [_jsx("span", { className: styles.infoLabel, children: "\u041C\u0430\u043A\u0441. \u043B\u0456\u043A\u0432\u0456\u0434\u043D\u0456\u0441\u0442\u044C:" }), _jsx("span", { className: styles.infoValue, children: realObject.pricing_configs[0]?.content.staticConfig.maximum_liq_refusal_price?.toFixed(2) || '0.00' })] })] }))] }), _jsx("button", { onClick: () => onCalculatePrice(), className: styles.calculateButton, children: "\u0420\u043E\u0437\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0446\u0456\u043D\u0443" })] }));
}
export default EnginePriceCalculator;
